DROP DATABASE IF EXISTS wooplance_db;
CREATE DATABASE wooplance_db;
USE wooplance_db;

CREATE TABLE users (
id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(250),
last_name VARCHAR(250),
username VARCHAR(250) unique,
email VARCHAR(250) unique,
password VARCHAR(250),
profile_pic varchar(250),
description varchar(500),
createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE categories(
id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
category varchar(150)
);

CREATE TABLE gigs(
id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
gig VARCHAR(250),
description VARCHAR(250),
specs VARCHAR(1000),
cover varchar(250),
price_min INT unsigned,
price_max INT UNSIGNED,
category_id INT UNSIGNED,
freelancer_id INT UNSIGNED,
rating DOUBLE unsigned,
createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY(category_id) REFERENCES categories (id) ON DELETE CASCADE,
FOREIGN KEY(freelancer_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE pending_gigs(
id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
gig VARCHAR(250),
description VARCHAR(250),
specs VARCHAR(1000),
cover varchar(250),
price_min INT unsigned,
price_max INT UNSIGNED,
category_id INT UNSIGNED,
done bool DEFAULT FALSE,
freelancer_id INT UNSIGNED,
employer_id INT UNSIGNED,
createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY(category_id) REFERENCES categories (id) ON DELETE CASCADE,
FOREIGN KEY(freelancer_id) REFERENCES users (id) ON DELETE CASCADE,
FOREIGN KEY(employer_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE comments(
id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
comment VARCHAR(250),
user_id INT UNSIGNED,
gig_id INT UNSIGNED,
createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY(user_id) REFERENCES users (id) ON DELETE CASCADE,
FOREIGN KEY(gig_id) REFERENCES gigs (id) ON DELETE CASCADE
);

CREATE TABLE ratings(
id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
rating INT UNSIGNED,
user_id INT UNSIGNED,
gig_id INT UNSIGNED,
FOREIGN KEY(user_id) REFERENCES users (id) ON DELETE CASCADE,
FOREIGN KEY(gig_id) REFERENCES gigs (id) ON DELETE CASCADE
);

